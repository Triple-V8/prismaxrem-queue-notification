{"ast":null,"code":"var _jsxFileName = \"/Users/3plev.eth/Documents/prismaxrem/reminder-app/client/src/components/ReminderForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReminderForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    telegramUsername: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [usernamePattern, setUsernamePattern] = useState('');\n  const generatePattern = username => {\n    if (username.length < 7) return '';\n    return `${username.substring(0, 4)}..${username.substring(username.length - 3)}`;\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.username.trim()) {\n      newErrors.username = 'Username is required';\n    } else if (formData.username.length < 7) {\n      newErrors.username = 'Username must be at least 7 characters long';\n    } else if (formData.username.length > 50) {\n      newErrors.username = 'Username must be less than 50 characters';\n    }\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Validate Telegram username (optional but if provided, must be valid)\n    if (formData.telegramUsername.trim()) {\n      if (!/^[a-zA-Z0-9_]{5,32}$/.test(formData.telegramUsername.replace('@', ''))) {\n        newErrors.telegramUsername = 'Telegram username must be 5-32 characters (letters, numbers, underscore only)';\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Update username pattern preview\n    if (field === 'username') {\n      setUsernamePattern(generatePattern(value));\n    }\n\n    // Clear errors when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: undefined\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsLoading(true);\n    setErrors({});\n    try {\n      // Prepare submission data\n      const submissionData = {\n        username: formData.username,\n        email: formData.email.toLowerCase(),\n        telegramUsername: formData.telegramUsername.trim() ? formData.telegramUsername.replace('@', '') : undefined\n      };\n      const response = await api.registerUser(submissionData);\n      if (response.success) {\n        setIsSuccess(true);\n        setFormData({\n          username: '',\n          email: '',\n          telegramUsername: ''\n        });\n        setUsernamePattern('');\n\n        // Keep success message open until user manually closes it\n        // Removed automatic timeout to allow Telegram bot activation\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setErrors({\n        general: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Registration failed. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (isSuccess) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card fade-in\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u2705 Registration Successful!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Welcome to PrismaX AI Reminder Service!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You'll receive email notifications when it's your turn in the queue.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your queue pattern:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 16\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: usernamePattern\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), !formData.telegramUsername && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-only-notice\",\n            style: {\n              background: '#e8f5e8',\n              border: '1px solid #4caf50',\n              borderRadius: '8px',\n              padding: '15px',\n              marginTop: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDCE7 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email notifications are active!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You'll get notified via email when it's your turn.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), formData.telegramUsername && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"telegram-next-steps\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDCF1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Next step for Telegram notifications:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Message \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"@Prismaxreminderbot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 28\n              }, this), \" on Telegram to activate instant notifications!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '15px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-telegram\",\n                onClick: () => {\n                  window.open('https://t.me/Prismaxreminderbot', '_blank', 'noopener,noreferrer');\n                },\n                style: {\n                  background: '#0088cc',\n                  color: 'white',\n                  padding: '12px 24px',\n                  borderRadius: '8px',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  marginRight: '10px'\n                },\n                children: \"\\uD83D\\uDE80 Activate Telegram Bot Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSuccess(false),\n            className: \"btn btn-primary\",\n            children: \"Register Another User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Join PrismaX AI Queue Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Get notified when it's your turn to teleoperate the robotic arm!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"registration-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"PrismaX AI Username *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: formData.username,\n            onChange: e => handleInputChange('username', e.target.value),\n            placeholder: \"Enter your PrismaX AI username\",\n            className: errors.username ? 'error' : '',\n            disabled: isLoading,\n            minLength: 7,\n            maxLength: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 31\n          }, this), usernamePattern && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pattern-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Queue pattern: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: usernamePattern\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email Address *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: formData.email,\n            onChange: e => handleInputChange('email', e.target.value),\n            placeholder: \"Enter your email address\",\n            className: errors.email ? 'error' : '',\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"telegramUsername\",\n            children: \"Telegram Username (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"telegramUsername\",\n            value: formData.telegramUsername,\n            onChange: e => handleInputChange('telegramUsername', e.target.value),\n            placeholder: \"@yourusername (optional)\",\n            className: errors.telegramUsername ? 'error' : '',\n            disabled: isLoading,\n            maxLength: 33\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 11\n          }, this), errors.telegramUsername && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: errors.telegramUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"telegram-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Get instant Telegram notifications! After registering, message our bot\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" @Prismaxreminderbot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 15\n              }, this), \" to activate notifications.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"telegram-button-container\",\n              style: {\n                marginTop: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: () => {\n                  window.open('https://t.me/Prismaxreminderbot', '_blank', 'noopener,noreferrer');\n                },\n                style: {\n                  background: '#0088cc',\n                  color: 'white',\n                  padding: '8px 16px',\n                  borderRadius: '6px',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '14px',\n                  fontWeight: 'bold'\n                },\n                children: \"\\uD83D\\uDCF1 Open Telegram Bot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general-error\",\n          children: errors.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: isLoading,\n            children: isLoading ? 'Registering...' : '🚀 Start Monitoring Queue'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"How it works:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Register with your PrismaX AI username and email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Optionally add your Telegram username for instant notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Our system monitors the queue in real-time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Get instant email notification when it's your turn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Telegram users get 5 successive notifications over 2 minutes!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Never miss your robotic arm session again!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"telegram-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Telegram Bot Setup:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"For instant Telegram notifications:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Add your Telegram username above (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"After registering, find \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"@Prismaxreminderbot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 43\n                }, this), \" on Telegram\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Send any message to activate notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Receive 5 instant alerts when it's your turn!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(ReminderForm, \"ucqj9mUJHV27goz1CEub+2ygf5Y=\");\n_c = ReminderForm;\nexport default ReminderForm;\nvar _c;\n$RefreshReg$(_c, \"ReminderForm\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","ReminderForm","_s","formData","setFormData","username","email","telegramUsername","errors","setErrors","isLoading","setIsLoading","isSuccess","setIsSuccess","usernamePattern","setUsernamePattern","generatePattern","length","substring","validateForm","newErrors","trim","test","replace","Object","keys","handleInputChange","field","value","prev","undefined","handleSubmit","e","preventDefault","submissionData","toLowerCase","response","registerUser","success","error","_error$response","_error$response$data","general","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","border","borderRadius","padding","marginTop","type","onClick","window","open","color","cursor","fontSize","fontWeight","marginRight","onSubmit","htmlFor","id","onChange","target","placeholder","disabled","minLength","maxLength","_c","$RefreshReg$"],"sources":["/Users/3plev.eth/Documents/prismaxrem/reminder-app/client/src/components/ReminderForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { api } from '../services/api';\n\ninterface FormData {\n  username: string;\n  email: string;\n  telegramUsername: string;\n}\n\ninterface FormErrors {\n  username?: string;\n  email?: string;\n  telegramUsername?: string;\n  general?: string;\n}\n\nconst ReminderForm: React.FC = () => {\n  const [formData, setFormData] = useState<FormData>({\n    username: '',\n    email: '',\n    telegramUsername: ''\n  });\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [usernamePattern, setUsernamePattern] = useState('');\n\n  const generatePattern = (username: string): string => {\n    if (username.length < 7) return '';\n    return `${username.substring(0, 4)}..${username.substring(username.length - 3)}`;\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: FormErrors = {};\n\n    if (!formData.username.trim()) {\n      newErrors.username = 'Username is required';\n    } else if (formData.username.length < 7) {\n      newErrors.username = 'Username must be at least 7 characters long';\n    } else if (formData.username.length > 50) {\n      newErrors.username = 'Username must be less than 50 characters';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Validate Telegram username (optional but if provided, must be valid)\n    if (formData.telegramUsername.trim()) {\n      if (!/^[a-zA-Z0-9_]{5,32}$/.test(formData.telegramUsername.replace('@', ''))) {\n        newErrors.telegramUsername = 'Telegram username must be 5-32 characters (letters, numbers, underscore only)';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleInputChange = (field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // Update username pattern preview\n    if (field === 'username') {\n      setUsernamePattern(generatePattern(value));\n    }\n\n    // Clear errors when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      // Prepare submission data\n      const submissionData = {\n        username: formData.username,\n        email: formData.email.toLowerCase(),\n        telegramUsername: formData.telegramUsername.trim() \n          ? formData.telegramUsername.replace('@', '') \n          : undefined\n      };\n      \n      const response = await api.registerUser(submissionData);\n      \n      if (response.success) {\n        setIsSuccess(true);\n        setFormData({ username: '', email: '', telegramUsername: '' });\n        setUsernamePattern('');\n        \n        // Keep success message open until user manually closes it\n        // Removed automatic timeout to allow Telegram bot activation\n      }\n    } catch (error: any) {\n      setErrors({\n        general: error.response?.data?.error || 'Registration failed. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isSuccess) {\n    return (\n      <div className=\"container\">\n        <div className=\"card fade-in\">\n          <div className=\"success-message\">\n            <h2>✅ Registration Successful!</h2>\n            <p>Welcome to PrismaX AI Reminder Service!</p>\n            <p>You'll receive email notifications when it's your turn in the queue.</p>\n            <p><strong>Your queue pattern:</strong> <code>{usernamePattern}</code></p>\n            \n            {!formData.telegramUsername && (\n              <div className=\"email-only-notice\" style={{\n                background: '#e8f5e8',\n                border: '1px solid #4caf50',\n                borderRadius: '8px',\n                padding: '15px',\n                marginTop: '15px'\n              }}>\n                <p>📧 <strong>Email notifications are active!</strong></p>\n                <p>You'll get notified via email when it's your turn.</p>\n              </div>\n            )}\n            {formData.telegramUsername && (\n              <div className=\"telegram-next-steps\">\n                <p>📱 <strong>Next step for Telegram notifications:</strong></p>\n                <p>Message <strong>@Prismaxreminderbot</strong> on Telegram to activate instant notifications!</p>\n                <div style={{marginTop: '15px'}}>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-telegram\"\n                    onClick={() => {\n                      window.open('https://t.me/Prismaxreminderbot', '_blank', 'noopener,noreferrer');\n                    }}\n                    style={{\n                      background: '#0088cc',\n                      color: 'white',\n                      padding: '12px 24px',\n                      borderRadius: '8px',\n                      border: 'none',\n                      cursor: 'pointer',\n                      fontSize: '16px',\n                      fontWeight: 'bold',\n                      marginRight: '10px'\n                    }}\n                  >\n                    🚀 Activate Telegram Bot Now\n                  </button>\n                </div>\n              </div>\n            )}\n            <button \n              onClick={() => setIsSuccess(false)}\n              className=\"btn btn-primary\"\n            >\n              Register Another User\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card fade-in\">\n        <div className=\"card-header\">\n          <h1>Join PrismaX AI Queue Notifications</h1>\n          <p>Get notified when it's your turn to teleoperate the robotic arm!</p>\n        </div>\n\n      <form onSubmit={handleSubmit} className=\"registration-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">\n            PrismaX AI Username *\n          </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={formData.username}\n            onChange={(e) => handleInputChange('username', e.target.value)}\n            placeholder=\"Enter your PrismaX AI username\"\n            className={errors.username ? 'error' : ''}\n            disabled={isLoading}\n            minLength={7}\n            maxLength={50}\n          />\n          {errors.username && <span className=\"error-text\">{errors.username}</span>}\n          {usernamePattern && (\n            <div className=\"pattern-preview\">\n              <small>Queue pattern: <code>{usernamePattern}</code></small>\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">\n            Email Address *\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={formData.email}\n            onChange={(e) => handleInputChange('email', e.target.value)}\n            placeholder=\"Enter your email address\"\n            className={errors.email ? 'error' : ''}\n            disabled={isLoading}\n          />\n          {errors.email && <span className=\"error-text\">{errors.email}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"telegramUsername\">\n            Telegram Username (Optional)\n          </label>\n          <input\n            type=\"text\"\n            id=\"telegramUsername\"\n            value={formData.telegramUsername}\n            onChange={(e) => handleInputChange('telegramUsername', e.target.value)}\n            placeholder=\"@yourusername (optional)\"\n            className={errors.telegramUsername ? 'error' : ''}\n            disabled={isLoading}\n            maxLength={33}\n          />\n          {errors.telegramUsername && <span className=\"error-text\">{errors.telegramUsername}</span>}\n          <div className=\"telegram-info\">\n            <small>\n               Get instant Telegram notifications! After registering, message our bot \n              <strong> @Prismaxreminderbot</strong> to activate notifications.\n            </small>\n            <div className=\"telegram-button-container\" style={{marginTop: '10px'}}>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  window.open('https://t.me/Prismaxreminderbot', '_blank', 'noopener,noreferrer');\n                }}\n                style={{\n                  background: '#0088cc',\n                  color: 'white',\n                  padding: '8px 16px',\n                  borderRadius: '6px',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '14px',\n                  fontWeight: 'bold'\n                }}\n              >\n                📱 Open Telegram Bot\n              </button>\n            </div>\n          </div>\n        </div>\n\n\n\n        {errors.general && (\n          <div className=\"general-error\">\n            {errors.general}\n          </div>\n        )}\n\n        <div className=\"form-actions\">\n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Registering...' : '🚀 Start Monitoring Queue'}\n          </button>\n        </div>\n\n        <div className=\"info-section\">\n          <h3>How it works:</h3>\n          <ol>\n            <li>Register with your PrismaX AI username and email</li>\n            <li>Optionally add your Telegram username for instant notifications</li>\n            <li>Our system monitors the queue in real-time</li>\n            <li>Get instant email notification when it's your turn</li>\n            <li>Telegram users get 5 successive notifications over 2 minutes!</li>\n            <li>Never miss your robotic arm session again!</li>\n          </ol>\n          \n          <div className=\"telegram-section\">\n            <h3>Telegram Bot Setup:</h3>\n            <p>For instant Telegram notifications:</p>\n            <ol>\n              <li>Add your Telegram username above (optional)</li>\n              <li>After registering, find <strong>@Prismaxreminderbot</strong> on Telegram</li>\n              <li>Send any message to activate notifications</li>\n              <li>Receive 5 instant alerts when it's your turn!</li>\n            </ol>\n          </div>\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ReminderForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}