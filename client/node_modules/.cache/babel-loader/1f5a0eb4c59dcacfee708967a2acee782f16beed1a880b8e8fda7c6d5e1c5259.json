{"ast":null,"code":"import _objectSpread from\"/Users/3plev.eth/Documents/prismaxrem/reminder-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{api}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ReminderForm=()=>{const[formData,setFormData]=useState({username:'',email:'',telegramUsername:''});const[errors,setErrors]=useState({});const[isLoading,setIsLoading]=useState(false);const[isSuccess,setIsSuccess]=useState(false);const[usernamePattern,setUsernamePattern]=useState('');const generatePattern=username=>{if(username.length<7)return'';return\"\".concat(username.substring(0,4),\"..\").concat(username.substring(username.length-3));};const validateForm=()=>{const newErrors={};if(!formData.username.trim()){newErrors.username='Username is required';}else if(formData.username.length<7){newErrors.username='Username must be at least 7 characters long';}else if(formData.username.length>50){newErrors.username='Username must be less than 50 characters';}if(!formData.email.trim()){newErrors.email='Email is required';}else if(!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)){newErrors.email='Please enter a valid email address';}// Validate Telegram username (optional but if provided, must be valid)\nif(formData.telegramUsername.trim()){if(!/^[a-zA-Z0-9_]{5,32}$/.test(formData.telegramUsername.replace('@',''))){newErrors.telegramUsername='Telegram username must be 5-32 characters (letters, numbers, underscore only)';}}setErrors(newErrors);return Object.keys(newErrors).length===0;};const handleInputChange=(field,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:value}));// Update username pattern preview\nif(field==='username'){setUsernamePattern(generatePattern(value));}// Clear errors when user starts typing\nif(errors[field]){setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:undefined}));}};const handleSubmit=async e=>{e.preventDefault();if(!validateForm())return;setIsLoading(true);setErrors({});try{// Prepare submission data\nconst submissionData={username:formData.username,email:formData.email.toLowerCase(),telegramUsername:formData.telegramUsername.trim()?formData.telegramUsername.replace('@',''):undefined};const response=await api.registerUser(submissionData);if(response.success){setIsSuccess(true);setFormData({username:'',email:'',telegramUsername:''});setUsernamePattern('');// Show success for 5 seconds then reset\nsetTimeout(()=>setIsSuccess(false),5000);}}catch(error){var _error$response,_error$response$data;setErrors({general:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Registration failed. Please try again.'});}finally{setIsLoading(false);}};if(isSuccess){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card fade-in\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"success-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u2705 Registration Successful!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome to PrismaX AI Reminder Service!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You'll receive email notifications when it's your turn in the queue.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Your queue pattern:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:usernamePattern})]}),formData.telegramUsername&&/*#__PURE__*/_jsxs(\"div\",{className:\"telegram-next-steps\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCF1 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Next step for Telegram notifications:\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Message \",/*#__PURE__*/_jsx(\"strong\",{children:\"@PrismaXBot\"}),\" on Telegram to activate instant notifications!\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsSuccess(false),className:\"btn btn-primary\",children:\"Register Another User\"})]})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card fade-in\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFAF Join PrismaX AI Queue Notifications\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Get notified when it's your turn to teleoperate the robotic arm!\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"registration-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"PrismaX AI Username *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",value:formData.username,onChange:e=>handleInputChange('username',e.target.value),placeholder:\"Enter your PrismaX AI username\",className:errors.username?'error':'',disabled:isLoading,minLength:7,maxLength:50}),errors.username&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.username}),usernamePattern&&/*#__PURE__*/_jsx(\"div\",{className:\"pattern-preview\",children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Queue pattern: \",/*#__PURE__*/_jsx(\"code\",{children:usernamePattern})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email Address *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:formData.email,onChange:e=>handleInputChange('email',e.target.value),placeholder:\"Enter your email address\",className:errors.email?'error':'',disabled:isLoading}),errors.email&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"telegramUsername\",children:\"Telegram Username (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"telegramUsername\",value:formData.telegramUsername,onChange:e=>handleInputChange('telegramUsername',e.target.value),placeholder:\"@yourusername (optional)\",className:errors.telegramUsername?'error':'',disabled:isLoading,maxLength:33}),errors.telegramUsername&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.telegramUsername}),/*#__PURE__*/_jsx(\"div\",{className:\"telegram-info\",children:/*#__PURE__*/_jsxs(\"small\",{children:[\"\\uD83D\\uDCF1 Get instant Telegram notifications! After registering, message our bot\",/*#__PURE__*/_jsx(\"strong\",{children:\" @PrismaXBot\"}),\" to activate notifications.\"]})})]}),errors.general&&/*#__PURE__*/_jsx(\"div\",{className:\"general-error\",children:errors.general}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:isLoading,children:isLoading?'Registering...':'🚀 Start Monitoring Queue'})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"How it works:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDCDD Register with your PrismaX AI username and email\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uFFFD Optionally add your Telegram username for instant notifications\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uFFFD\\uD83D\\uDD0D Our system monitors the queue in real-time\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDCE7 Get instant email notification when it's your turn\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDE80 Telegram users get 5 successive notifications over 2 minutes!\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u26A1 Never miss your robotic arm session again!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"telegram-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCF1 Telegram Bot Setup:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"For instant Telegram notifications:\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Add your Telegram username above (optional)\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"After registering, find \",/*#__PURE__*/_jsx(\"strong\",{children:\"@PrismaXBot\"}),\" on Telegram\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"Send any message to activate notifications\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Receive 5 instant alerts when it's your turn!\"})]})]})]})]})]})});};export default ReminderForm;","map":{"version":3,"names":["React","useState","api","jsx","_jsx","jsxs","_jsxs","ReminderForm","formData","setFormData","username","email","telegramUsername","errors","setErrors","isLoading","setIsLoading","isSuccess","setIsSuccess","usernamePattern","setUsernamePattern","generatePattern","length","concat","substring","validateForm","newErrors","trim","test","replace","Object","keys","handleInputChange","field","value","prev","_objectSpread","undefined","handleSubmit","e","preventDefault","submissionData","toLowerCase","response","registerUser","success","setTimeout","error","_error$response","_error$response$data","general","data","className","children","onClick","onSubmit","htmlFor","type","id","onChange","target","placeholder","disabled","minLength","maxLength"],"sources":["/Users/3plev.eth/Documents/prismaxrem/reminder-app/client/src/components/ReminderForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { api } from '../services/api';\n\ninterface FormData {\n  username: string;\n  email: string;\n  telegramUsername: string;\n}\n\ninterface FormErrors {\n  username?: string;\n  email?: string;\n  telegramUsername?: string;\n  general?: string;\n}\n\nconst ReminderForm: React.FC = () => {\n  const [formData, setFormData] = useState<FormData>({\n    username: '',\n    email: '',\n    telegramUsername: ''\n  });\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [usernamePattern, setUsernamePattern] = useState('');\n\n  const generatePattern = (username: string): string => {\n    if (username.length < 7) return '';\n    return `${username.substring(0, 4)}..${username.substring(username.length - 3)}`;\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: FormErrors = {};\n\n    if (!formData.username.trim()) {\n      newErrors.username = 'Username is required';\n    } else if (formData.username.length < 7) {\n      newErrors.username = 'Username must be at least 7 characters long';\n    } else if (formData.username.length > 50) {\n      newErrors.username = 'Username must be less than 50 characters';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Validate Telegram username (optional but if provided, must be valid)\n    if (formData.telegramUsername.trim()) {\n      if (!/^[a-zA-Z0-9_]{5,32}$/.test(formData.telegramUsername.replace('@', ''))) {\n        newErrors.telegramUsername = 'Telegram username must be 5-32 characters (letters, numbers, underscore only)';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleInputChange = (field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // Update username pattern preview\n    if (field === 'username') {\n      setUsernamePattern(generatePattern(value));\n    }\n\n    // Clear errors when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      // Prepare submission data\n      const submissionData = {\n        username: formData.username,\n        email: formData.email.toLowerCase(),\n        telegramUsername: formData.telegramUsername.trim() \n          ? formData.telegramUsername.replace('@', '') \n          : undefined\n      };\n      \n      const response = await api.registerUser(submissionData);\n      \n      if (response.success) {\n        setIsSuccess(true);\n        setFormData({ username: '', email: '', telegramUsername: '' });\n        setUsernamePattern('');\n        \n        // Show success for 5 seconds then reset\n        setTimeout(() => setIsSuccess(false), 5000);\n      }\n    } catch (error: any) {\n      setErrors({\n        general: error.response?.data?.error || 'Registration failed. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isSuccess) {\n    return (\n      <div className=\"container\">\n        <div className=\"card fade-in\">\n          <div className=\"success-message\">\n            <h2>✅ Registration Successful!</h2>\n            <p>Welcome to PrismaX AI Reminder Service!</p>\n            <p>You'll receive email notifications when it's your turn in the queue.</p>\n            <p><strong>Your queue pattern:</strong> <code>{usernamePattern}</code></p>\n            {formData.telegramUsername && (\n              <div className=\"telegram-next-steps\">\n                <p>📱 <strong>Next step for Telegram notifications:</strong></p>\n                <p>Message <strong>@PrismaXBot</strong> on Telegram to activate instant notifications!</p>\n              </div>\n            )}\n            <button \n              onClick={() => setIsSuccess(false)}\n              className=\"btn btn-primary\"\n            >\n              Register Another User\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card fade-in\">\n        <div className=\"card-header\">\n          <h1>🎯 Join PrismaX AI Queue Notifications</h1>\n          <p>Get notified when it's your turn to teleoperate the robotic arm!</p>\n        </div>\n\n      <form onSubmit={handleSubmit} className=\"registration-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">\n            PrismaX AI Username *\n          </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={formData.username}\n            onChange={(e) => handleInputChange('username', e.target.value)}\n            placeholder=\"Enter your PrismaX AI username\"\n            className={errors.username ? 'error' : ''}\n            disabled={isLoading}\n            minLength={7}\n            maxLength={50}\n          />\n          {errors.username && <span className=\"error-text\">{errors.username}</span>}\n          {usernamePattern && (\n            <div className=\"pattern-preview\">\n              <small>Queue pattern: <code>{usernamePattern}</code></small>\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">\n            Email Address *\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={formData.email}\n            onChange={(e) => handleInputChange('email', e.target.value)}\n            placeholder=\"Enter your email address\"\n            className={errors.email ? 'error' : ''}\n            disabled={isLoading}\n          />\n          {errors.email && <span className=\"error-text\">{errors.email}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"telegramUsername\">\n            Telegram Username (Optional)\n          </label>\n          <input\n            type=\"text\"\n            id=\"telegramUsername\"\n            value={formData.telegramUsername}\n            onChange={(e) => handleInputChange('telegramUsername', e.target.value)}\n            placeholder=\"@yourusername (optional)\"\n            className={errors.telegramUsername ? 'error' : ''}\n            disabled={isLoading}\n            maxLength={33}\n          />\n          {errors.telegramUsername && <span className=\"error-text\">{errors.telegramUsername}</span>}\n          <div className=\"telegram-info\">\n            <small>\n              📱 Get instant Telegram notifications! After registering, message our bot \n              <strong> @PrismaXBot</strong> to activate notifications.\n            </small>\n          </div>\n        </div>\n\n\n\n        {errors.general && (\n          <div className=\"general-error\">\n            {errors.general}\n          </div>\n        )}\n\n        <div className=\"form-actions\">\n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Registering...' : '🚀 Start Monitoring Queue'}\n          </button>\n        </div>\n\n        <div className=\"info-section\">\n          <h3>How it works:</h3>\n          <ul>\n            <li>📝 Register with your PrismaX AI username and email</li>\n            <li>� Optionally add your Telegram username for instant notifications</li>\n            <li>�🔍 Our system monitors the queue in real-time</li>\n            <li>📧 Get instant email notification when it's your turn</li>\n            <li>🚀 Telegram users get 5 successive notifications over 2 minutes!</li>\n            <li>⚡ Never miss your robotic arm session again!</li>\n          </ul>\n          \n          <div className=\"telegram-section\">\n            <h4>📱 Telegram Bot Setup:</h4>\n            <p>For instant Telegram notifications:</p>\n            <ol>\n              <li>Add your Telegram username above (optional)</li>\n              <li>After registering, find <strong>@PrismaXBot</strong> on Telegram</li>\n              <li>Send any message to activate notifications</li>\n              <li>Receive 5 instant alerts when it's your turn!</li>\n            </ol>\n          </div>\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ReminderForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}