{"ast":null,"code":"import React,{useEffect,useState}from'react';import{api}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserDashboard=()=>{const[stats,setStats]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const getDashboardStats=async()=>{try{setIsLoading(true);setError(null);// Fetch multiple endpoints for dashboard stats\nconst[usersResponse,queueResponse]=await Promise.all([api.getAllUsers(),api.getCurrentQueueStatus()]);// Calculate stats\nconst dashboardData={totalUsers:usersResponse.length||0,activeNotifications:usersResponse.filter(user=>user.isActive).length||0,totalNotificationsSent:0,// This would come from notification logs\nlastQueueUpdate:new Date().toISOString()};setStats(dashboardData);}catch(err){setError('Failed to load dashboard data. Please try again later.');console.error('Error fetching dashboard stats:',err);}finally{setIsLoading(false);}};getDashboardStats();// Refresh stats every minute\nconst interval=setInterval(getDashboardStats,60000);return()=>clearInterval(interval);},[]);if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card fade-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',color:'var(--text-secondary)'},children:\"Loading dashboard...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card fade-in\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u26A0\\uFE0F Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>window.location.reload(),children:\"Retry\"})]})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card fade-in\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDCCA PrismaX AI Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Monitor system statistics and queue activity\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:(stats===null||stats===void 0?void 0:stats.totalUsers)||0}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Registered Users\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:(stats===null||stats===void 0?void 0:stats.activeNotifications)||0}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Active Notifications\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:(stats===null||stats===void 0?void 0:stats.totalNotificationsSent)||0}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Notifications Sent\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:stats!==null&&stats!==void 0&&stats.lastQueueUpdate?new Date(stats.lastQueueUpdate).toLocaleTimeString():'Unknown'}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Last Queue Update\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",style:{marginTop:'32px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"System Status\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'16px',alignItems:'center',marginTop:'16px'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"status status-active\",children:\"\\uD83D\\uDFE2 Queue Monitor Active\"}),/*#__PURE__*/_jsx(\"div\",{className:\"status status-active\",children:\"\\uD83D\\uDFE2 Email Service Online\"}),/*#__PURE__*/_jsx(\"div\",{className:\"status status-active\",children:\"\\uD83D\\uDFE2 Database Connected\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",style:{marginTop:'24px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Activity\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'var(--text-secondary)',marginTop:'16px'},children:\"\\uD83D\\uDD04 Dashboard updates automatically every minute\"}),/*#__PURE__*/_jsxs(\"p\",{style:{color:'var(--text-muted)',fontSize:'14px'},children:[\"Last updated: \",new Date().toLocaleTimeString()]})]})]})})});};export default UserDashboard;","map":{"version":3,"names":["React","useEffect","useState","api","jsx","_jsx","jsxs","_jsxs","UserDashboard","stats","setStats","isLoading","setIsLoading","error","setError","getDashboardStats","usersResponse","queueResponse","Promise","all","getAllUsers","getCurrentQueueStatus","dashboardData","totalUsers","length","activeNotifications","filter","user","isActive","totalNotificationsSent","lastQueueUpdate","Date","toISOString","err","console","interval","setInterval","clearInterval","className","children","style","textAlign","color","onClick","window","location","reload","toLocaleTimeString","marginTop","display","gap","alignItems","fontSize"],"sources":["/Users/3plev.eth/Documents/prismaxrem/reminder-app/client/src/components/UserDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { api } from '../services/api';\n\ninterface DashboardStats {\n  totalUsers: number;\n  activeNotifications: number;\n  totalNotificationsSent: number;\n  lastQueueUpdate: string;\n}\n\nconst UserDashboard: React.FC = () => {\n    const [stats, setStats] = useState<DashboardStats | null>(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const getDashboardStats = async () => {\n            try {\n                setIsLoading(true);\n                setError(null);\n                \n                // Fetch multiple endpoints for dashboard stats\n                const [usersResponse, queueResponse] = await Promise.all([\n                    api.getAllUsers(),\n                    api.getCurrentQueueStatus()\n                ]);\n\n                // Calculate stats\n                const dashboardData: DashboardStats = {\n                    totalUsers: usersResponse.length || 0,\n                    activeNotifications: usersResponse.filter((user: any) => user.isActive).length || 0,\n                    totalNotificationsSent: 0, // This would come from notification logs\n                    lastQueueUpdate: new Date().toISOString()\n                };\n\n                setStats(dashboardData);\n            } catch (err: any) {\n                setError('Failed to load dashboard data. Please try again later.');\n                console.error('Error fetching dashboard stats:', err);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        getDashboardStats();\n        \n        // Refresh stats every minute\n        const interval = setInterval(getDashboardStats, 60000);\n        return () => clearInterval(interval);\n    }, []);\n\n    if (isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"card fade-in\">\n                    <div className=\"loading\">\n                        <div className=\"spinner\"></div>\n                    </div>\n                    <p style={{ textAlign: 'center', color: 'var(--text-secondary)' }}>\n                        Loading dashboard...\n                    </p>\n                </div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"container\">\n                <div className=\"card fade-in\">\n                    <div className=\"error-message\">\n                        <h2>‚ö†Ô∏è Error</h2>\n                        <p>{error}</p>\n                        <button \n                            className=\"btn btn-primary\"\n                            onClick={() => window.location.reload()}\n                        >\n                            Retry\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"card fade-in\">\n                <div className=\"dashboard\">\n                    <div className=\"card-header\">\n                        <h1>üìä PrismaX AI Dashboard</h1>\n                        <p>Monitor system statistics and queue activity</p>\n                    </div>\n\n                    <div className=\"dashboard-grid\">\n                        <div className=\"stat-card\">\n                            <span className=\"stat-value\">{stats?.totalUsers || 0}</span>\n                            <div className=\"stat-label\">Total Registered Users</div>\n                        </div>\n\n                        <div className=\"stat-card\">\n                            <span className=\"stat-value\">{stats?.activeNotifications || 0}</span>\n                            <div className=\"stat-label\">Active Notifications</div>\n                        </div>\n\n                        <div className=\"stat-card\">\n                            <span className=\"stat-value\">{stats?.totalNotificationsSent || 0}</span>\n                            <div className=\"stat-label\">Total Notifications Sent</div>\n                        </div>\n\n                        <div className=\"stat-card\">\n                            <span className=\"stat-value\">\n                                {stats?.lastQueueUpdate ? \n                                    new Date(stats.lastQueueUpdate).toLocaleTimeString() : \n                                    'Unknown'\n                                }\n                            </span>\n                            <div className=\"stat-label\">Last Queue Update</div>\n                        </div>\n                    </div>\n\n                    <div className=\"card\" style={{ marginTop: '32px' }}>\n                        <h3>System Status</h3>\n                        <div style={{ display: 'flex', gap: '16px', alignItems: 'center', marginTop: '16px' }}>\n                            <div className=\"status status-active\">\n                                üü¢ Queue Monitor Active\n                            </div>\n                            <div className=\"status status-active\">\n                                üü¢ Email Service Online\n                            </div>\n                            <div className=\"status status-active\">\n                                üü¢ Database Connected\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card\" style={{ marginTop: '24px' }}>\n                        <h3>Recent Activity</h3>\n                        <p style={{ color: 'var(--text-secondary)', marginTop: '16px' }}>\n                            üîÑ Dashboard updates automatically every minute\n                        </p>\n                        <p style={{ color: 'var(--text-muted)', fontSize: '14px' }}>\n                            Last updated: {new Date().toLocaleTimeString()}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UserDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}