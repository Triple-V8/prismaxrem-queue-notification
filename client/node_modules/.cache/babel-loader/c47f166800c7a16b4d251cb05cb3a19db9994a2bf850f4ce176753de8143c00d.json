{"ast":null,"code":"var _jsxFileName = \"/Users/3plev.eth/Documents/prismaxrem/reminder-app/client/src/components/UserDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchUserQueueStatus } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [queueStatus, setQueueStatus] = useState(null);\n  useEffect(() => {\n    const getQueueStatus = async () => {\n      const status = await fetchUserQueueStatus();\n      setQueueStatus(status);\n    };\n    getQueueStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), queueStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Position in Queue: \", queueStatus.position]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notifications:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: queueStatus.notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: notification\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(UserDashboard, \"KcF7hXMy59ZFD2/2z0fHYHtMrxE=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchUserQueueStatus","jsxDEV","_jsxDEV","UserDashboard","_s","queueStatus","setQueueStatus","getQueueStatus","status","children","fileName","_jsxFileName","lineNumber","columnNumber","position","notifications","map","notification","index","_c","$RefreshReg$"],"sources":["/Users/3plev.eth/Documents/prismaxrem/reminder-app/client/src/components/UserDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchUserQueueStatus } from '../services/api';\n\nconst UserDashboard: React.FC = () => {\n    const [queueStatus, setQueueStatus] = useState<{ position: number; notifications: string[] } | null>(null);\n\n    useEffect(() => {\n        const getQueueStatus = async () => {\n            const status = await fetchUserQueueStatus();\n            setQueueStatus(status);\n        };\n\n        getQueueStatus();\n    }, []);\n\n    return (\n        <div>\n            <h1>User Dashboard</h1>\n            {queueStatus ? (\n                <div>\n                    <h2>Your Position in Queue: {queueStatus.position}</h2>\n                    <h3>Notifications:</h3>\n                    <ul>\n                        {queueStatus.notifications.map((notification, index) => (\n                            <li key={index}>{notification}</li>\n                        ))}\n                    </ul>\n                </div>\n            ) : (\n                <p>Loading...</p>\n            )}\n        </div>\n    );\n};\n\nexport default UserDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,oBAAoB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAuD,IAAI,CAAC;EAE1GD,SAAS,CAAC,MAAM;IACZ,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,MAAM,GAAG,MAAMR,oBAAoB,CAAC,CAAC;MAC3CM,cAAc,CAACE,MAAM,CAAC;IAC1B,CAAC;IAEDD,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBR,WAAW,gBACRH,OAAA;MAAAO,QAAA,gBACIP,OAAA;QAAAO,QAAA,GAAI,0BAAwB,EAACJ,WAAW,CAACS,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvDX,OAAA;QAAAO,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBX,OAAA;QAAAO,QAAA,EACKJ,WAAW,CAACU,aAAa,CAACC,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBAC/ChB,OAAA;UAAAO,QAAA,EAAiBQ;QAAY,GAApBC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,gBAENX,OAAA;MAAAO,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACT,EAAA,CA9BID,aAAuB;AAAAgB,EAAA,GAAvBhB,aAAuB;AAgC7B,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}